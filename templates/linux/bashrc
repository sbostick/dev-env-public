#!/bin/bash

function join_by { local IFS="$1"; shift; echo "$*"; }
function path_append { PATH=$(join_by ":" "$PATH" "$1"); export PATH; }
function path_prepend { PATH=$(join_by ":" "$1" "$PATH"); export PATH; }

if [ -f /etc/bashrc ]; then
  . /etc/bashrc
fi

set -o vi

export TERM="xterm-256color"

alias c='clear'
alias ls='ls -CF --color'
alias ll='ls -lF'
alias la='ls -lhA'
alias rm="rm -i"
alias mv="mv -i"

alias glo='git log --decorate --oneline --graph'
alias glg='git log --decorate --graph --abbrev-commit --date=relative'
alias glc='git log --format="%Cred%h%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset%C(yellow)%d%Creset" --no-merges'
alias glx='git log --decorate --graph --abbrev-commit --format="%Cred%h%Creset %s %Cgreen(%cr) %C(blue)<%an>%Creset%C(yellow)%d%Creset"'
alias ga='git add -A'
alias gs='git status'
alias gd='git diff'
alias gss='git status -s'
alias gcm='git commit -m'
alias gp='git push'
alias gshow='git show --name-status'  # E.g. gshow <gch>
alias gshowol='git show --oneline'    # E.g. gshow <gch>
alias gacm='git add -A; git commit -m "git-add-commit [auto]"'

alias kx='kubectx'
alias kn='kubens'
alias kc='kubectl'

GOPATH="$HOME/go"
export GOPATH

path_prepend "/usr/local/bin"
path_prepend "/usr/local/go/bin"
path_prepend "$HOME/.local/bin"
path_prepend "$HOME/bin"
path_prepend "$GOPATH/bin"
export PATH

shopt -s histappend
shopt -s checkwinsize

HISTFILE=$HOME/.history
HISTCONTROL=ignoreboth
HISTSIZE=2000
HISTFILESIZE=2000

export WINEDITOR=vim
export VISUAL=vim
export EDITOR=vim
export BAT_THEME="Solarized (dark)"

KUBECONFIG="$HOME/.kube/config"
export KUBECONFIG

export LS_COLORS=$(join_by ':' \
  'di=1:fi=0:ln=31:pi=5:so=5:bd=5:cd=5:or=31' \
  'mi=0:ex=1;32' \
  '*.rpm=90' \
  '*akefile=1')

########################################################################
#                         Bash Completion                              #
########################################################################

BASH_COMPLETION="/etc/profile.d/bash_completion.sh"
if [[ -f "$BASH_COMPLETION" ]]; then
  source "$BASH_COMPLETION"
fi

########################################################################
#                         Bash Prompt                                  #
########################################################################

BASH_PROMPT_SOURCE="/usr/share/git-core/contrib/completion/git-prompt.sh"
if [[ -e "${BASH_PROMPT_SOURCE}" ]]; then
  source "${BASH_PROMPT_SOURCE}"
fi

# For details, see the git-prompt documentation in the
# git-prompt.sh script or at the github project page.
export GIT_PS1_SHOWSTASHSTATE=1
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWUNTRACKEDFILES=1
export GIT_PS1_SHOWUPSTREAM="auto"
export GIT_PS1_SHOWCOLORHINTS=0
export GIT_PS1_HIDE_IF_PWD_IGNORED=0
export GIT_PS1_STATESEPARATOR=":"

function git_status {
  type __git_ps1 &>/dev/null || return
  git rev-parse --is-inside-work-tree &>/dev/null || return
  echo -e "[$(__git_ps1 '%s')]"
}

function show_tput_setaf_colors {
  for idx in $(seq 0 255); do
    echo "$(tput setaf $idx)//====[ Color $idx ]====//$(tput sgr0)"
  done
}

NEWLINE=$'\n'
FG_TEAL="$(tput setaf 51)"
FG_WHITE="$(tput setaf 246)"
FG_ORANGE="$(tput setaf 214)"
FG_LIGHTBLUE="$(tput setaf 81)"
FG_MEDIUMBLUE="$(tput setaf 32)"
FG_NORMAL="$(tput sgr0)"
TIMESTAMP="\D{%H:%M:%S}"
USER_HOST="\u@\h"

#ATTN="$(tput setab 88)$(tput setaf 15)"
#ATTN="$(tput setab 0)$(tput setaf 33)"
ATTN="$(tput setab 20)$(tput setaf 15)"

export PS1="$ATTN[$TIMESTAMP]$FG_NORMAL $USER_HOST:\w$NEWLINE\$(git_status)$ "


########################################################################
#                            GPG CONFIG                                #
########################################################################

# GPG_TTY is necessary for github commit signing when using gpg via homebrew.
# Does this apply too Linux as well?
export GPG_TTY=$(tty)

function gpg-clear-cache {
  echo RELOADAGENT | gpg-connect-agent
}
